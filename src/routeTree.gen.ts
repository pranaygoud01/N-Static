/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AmbienceRouteImport } from './routes/ambience'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MenuFoodRouteImport } from './routes/menu/food'
import { Route as MenuDrinksRouteImport } from './routes/menu/drinks'
import { Route as MenuDessertsRouteImport } from './routes/menu/desserts'

const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AmbienceRoute = AmbienceRouteImport.update({
  id: '/ambience',
  path: '/ambience',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuFoodRoute = MenuFoodRouteImport.update({
  id: '/menu/food',
  path: '/menu/food',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuDrinksRoute = MenuDrinksRouteImport.update({
  id: '/menu/drinks',
  path: '/menu/drinks',
  getParentRoute: () => rootRouteImport,
} as any)
const MenuDessertsRoute = MenuDessertsRouteImport.update({
  id: '/menu/desserts',
  path: '/menu/desserts',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ambience': typeof AmbienceRoute
  '/contact': typeof ContactRoute
  '/menu/desserts': typeof MenuDessertsRoute
  '/menu/drinks': typeof MenuDrinksRoute
  '/menu/food': typeof MenuFoodRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ambience': typeof AmbienceRoute
  '/contact': typeof ContactRoute
  '/menu/desserts': typeof MenuDessertsRoute
  '/menu/drinks': typeof MenuDrinksRoute
  '/menu/food': typeof MenuFoodRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ambience': typeof AmbienceRoute
  '/contact': typeof ContactRoute
  '/menu/desserts': typeof MenuDessertsRoute
  '/menu/drinks': typeof MenuDrinksRoute
  '/menu/food': typeof MenuFoodRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/ambience'
    | '/contact'
    | '/menu/desserts'
    | '/menu/drinks'
    | '/menu/food'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/ambience'
    | '/contact'
    | '/menu/desserts'
    | '/menu/drinks'
    | '/menu/food'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/ambience'
    | '/contact'
    | '/menu/desserts'
    | '/menu/drinks'
    | '/menu/food'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AmbienceRoute: typeof AmbienceRoute
  ContactRoute: typeof ContactRoute
  MenuDessertsRoute: typeof MenuDessertsRoute
  MenuDrinksRoute: typeof MenuDrinksRoute
  MenuFoodRoute: typeof MenuFoodRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ambience': {
      id: '/ambience'
      path: '/ambience'
      fullPath: '/ambience'
      preLoaderRoute: typeof AmbienceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/food': {
      id: '/menu/food'
      path: '/menu/food'
      fullPath: '/menu/food'
      preLoaderRoute: typeof MenuFoodRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/drinks': {
      id: '/menu/drinks'
      path: '/menu/drinks'
      fullPath: '/menu/drinks'
      preLoaderRoute: typeof MenuDrinksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/menu/desserts': {
      id: '/menu/desserts'
      path: '/menu/desserts'
      fullPath: '/menu/desserts'
      preLoaderRoute: typeof MenuDessertsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AmbienceRoute: AmbienceRoute,
  ContactRoute: ContactRoute,
  MenuDessertsRoute: MenuDessertsRoute,
  MenuDrinksRoute: MenuDrinksRoute,
  MenuFoodRoute: MenuFoodRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
